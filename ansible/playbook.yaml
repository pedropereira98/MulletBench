---

- name: Load resource limiting variables
  hosts: edgeservers
  connection: local
  tasks:
    - name: Include resource limiting vars
      ansible.builtin.include_vars:
        file: "device_profiles/{{ limited_profile }}.yml"
      when: limited_resources and use_resource_profile
    - name: Limiting resource vars
      ansible.builtin.debug:
        msg: "{{ limited_resources_cpu }} and {{ '%dM' | format(limited_resources_mem) }}"
      when: limited_resources and use_resource_profile

- name: Install pip for all hosts
  hosts: all
  become: true
  tasks:
    - name: Install pip
      ansible.builtin.apt:
        name:
          - python3-pip

- name: Fix Python3.11 externally managed
  hosts: all
  become: true
  tasks:
    - name: get python3 version installed
      ansible.builtin.command: python3 --version
      register: py3ver
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version >= "23"

    - name: Debug
      ansible.builtin.debug:
        var: py3ver

    - name: remove EXTERNALLY-MANAGED if we're on Ubuntu 23 
      ansible.builtin.file:
        path: /usr/lib/python3.11/EXTERNALLY-MANAGED
        state: absent
      when: py3ver.stdout is defined and py3ver.stdout.find("3.11") != -1

- name: Install docker and docker compose for all hosts
  hosts: all:localhost
  become: true
  tasks:
    - name: Install docker python modules
      pip:
        name:
          - PyYAML==5.3.1
          - docker==6.1.3
          - docker-compose>==1.29.2

- name: Install docker for all hosts
  hosts: all:localhost
  become: true
  vars:
    docker_packages:
      - "docker-{{ docker_edition }}"
      - "docker-{{ docker_edition }}-cli"
      - "docker-{{ docker_edition }}-rootless-extras"
    docker_packages_state: present
    pip_install_packages:
      - name: cryptography
        version: "3.4"
      - name: docker
      - name: docker-compose
    docker_users:
      - "{{ ansible_user }}"
  roles:
    - role: geerlingguy.pip # install docker python library
      become: true
    - role: geerlingguy.docker # install docker
      become: true

- name: Install database for all hosts
  hosts:
    - edgeservers
    - cloudservers
  roles:
    - common-database

- name: Config cloud servers
  hosts: cloudservers
  roles:
    - clouds
  tags:
    - config

- name: Config edge servers
  hosts: edgeservers
  roles:
    - edges
  tags:
    - config

- name: Run Benchmark Orchestrator
  hosts: localhost
  connection: local
  roles:
    - benchmark-orchestrator

- name: Run Benchmark Clients
  hosts: benchmark_clients
  roles:
    - benchmark-client
